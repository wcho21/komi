#!/usr/bin/env bash
# build: wrapper script to build or clean wasm artifact

# internal variables
BUILD_MODE="--release"
COMMAND="build"
WASM_OUT_NAME="komi"
WASM_OUT_SCOPE="wcho21"
OUT_DIR="./komi_wasm/pkg"

fail() {
  echo "build: failed."
  exit 1
}

# script body
build() {
  echo "build: started."

  cd komi_wasm

  # build as bundled library
  wasm-pack build --target bundler ${BUILD_MODE} --out-name ${WASM_OUT_NAME} --scope ${WASM_OUT_SCOPE}

  if [ $? -ne 0 ]; then
    fail
  fi

  if [[ "${BUILD_MODE}" == "--dev" ]]; then
    exit 0
  fi
}

clean() {
  echo "build: removing build artifact..."
  rm -rf ${OUT_DIR}
  echo "build: removed."
}

help() {
  echo "build: Usage: $0 [clean|help] [--dev|--release]"
}

for ARG in "$@"; do
  case $ARG in
    "clean")
      COMMAND="clean"
      ;;
    "help")
      COMMAND="help"
      ;;
    "--dev")
      BUILD_MODE="--dev"
      ;;
    "--release")
      BUILD_MODE="--release"
      ;;
    *)
      echo "build: unknown option '${ARG}'"
      help
      fail
    ;;
  esac
done

case $COMMAND in
  "build")
    build
    ;;
  "help")
    help
    ;;
  "clean")
    clean
    ;;
  *)
    echo "build: unexpected command '${COMMAND}'"
    fail
esac